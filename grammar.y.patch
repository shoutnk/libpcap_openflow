--- orig/grammar.y	2015-03-09 12:22:07.000000000 -0700
+++ new/grammar.y	2015-12-16 06:45:49.493738224 -0800
@@ -62,6 +62,8 @@
 #include "os-proto.h"
 #endif
 
+#include "openflow.h"
+
 #define QSET(q, p, d, a) (q).proto = (p),\
 			 (q).dir = (d),\
 			 (q).addr = (a)
@@ -71,6 +73,70 @@
 	const char *s;		/* string */
 };
 
+static const struct tok openflow_types[] = {
+    { OFPT_HELLO, "hello" },
+    { OFPT_ERROR, "error" },
+    { OFPT_ECHO_REQUEST, "echo_request" },
+    { OFPT_ECHO_REPLY, "echo_reply" },
+    { OFPT_VENDOR, "vendor" },
+    { OFPT_FEATURES_REQUEST, "features_request" },
+    { OFPT_FEATURES_REPLY, "features_reply" },
+    { OFPT_GET_CONFIG_REQUEST, "config_request" },
+    { OFPT_GET_CONFIG_REPLY, "config_reply" },
+    { OFPT_SET_CONFIG, "set_config" },
+    { OFPT_PACKET_IN, "packet_in" },
+    { OFPT_FLOW_REMOVED, "flow_removed" },
+    { OFPT_PORT_STATUS, "port_status" },
+    { OFPT_PACKET_OUT, "packet_out" },
+    { OFPT_FLOW_MOD, "flow_mod" },
+    { OFPT_PORT_MOD, "port_mod" },
+    { OFPT_STATS_REQUEST, "stats_request" },
+    { OFPT_STATS_REPLY, "stats_reply" },
+    { OFPT_BARRIER_REQUEST, "barrier_request" },
+    { OFPT_BARRIER_REPLY, "barrier_reply" },
+    { OFPT_QUEUE_GET_CONFIG_REQUEST, "queue_config_request" },
+    { OFPT_QUEUE_GET_CONFIG_REPLY, "queue_config_reply" },
+    // { 0, NULL }
+};
+
+static const struct tok openflow_action_types[] = {
+    { OFPAT_OUTPUT, "output" },
+    { OFPAT_SET_VLAN_VID, "mod_vlan_vid" },
+    { OFPAT_SET_VLAN_PCP, "mod_vlan_pcap" },
+    { OFPAT_STRIP_VLAN, "strip_vlan" },
+    { OFPAT_SET_DL_SRC, "mod_dl_src" },
+    { OFPAT_SET_DL_DST, "mod_dl_dst" },
+    { OFPAT_SET_NW_SRC, "mod_nw_src" },
+    { OFPAT_SET_NW_DST, "mod_nw_dst" },
+    { OFPAT_SET_NW_TOS, "mod_nw_tos" },
+    { OFPAT_SET_TP_SRC, "mod_tp_src" },
+    { OFPAT_SET_TP_DST, "mod_tp_dst" },
+    { OFPAT_ENQUEUE, "enqueue" },
+    { OFPAT_VENDOR, "vendor" },
+    // { 0, NULL }
+};
+
+static const struct tok openflow_error_types[] = {
+    { OFPET_HELLO_FAILED, "hello_failed" },
+    { OFPET_BAD_REQUEST, "bad_request" },
+    { OFPET_BAD_ACTION, "bad_action" },
+    { OFPET_FLOW_MOD_FAILED, "flow_mod_failed" },
+    { OFPET_PORT_MOD_FAILED, "port_mod_failed" },
+    { OFPET_QUEUE_OP_FAILED, "queue_op_failed" },
+    // { 0, NULL }
+};
+
+static const struct tok openflow_stats_types[] = {
+    { OFPST_DESC, "desc" },
+    { OFPST_FLOW, "flow" },
+    { OFPST_AGGREGATE, "aggregate" },
+    { OFPST_TABLE, "table" },
+    { OFPST_PORT, "port" },
+    { OFPST_QUEUE, "queue" },
+    { OFPST_VENDOR, "vendor" },
+    // { 0, NULL }
+};
+
 static const struct tok ieee80211_types[] = {
 	{ IEEE80211_FC0_TYPE_DATA, "data" },
 	{ IEEE80211_FC0_TYPE_MGT, "mgt" },
@@ -275,18 +341,19 @@
 %type	<a>	arth narth
 %type	<i>	byteop pname pnum relop irelop
 %type	<blk>	and or paren not null prog
-%type	<rblk>	other pfvar p80211 pllc
+%type	<rblk>	other pfvar p80211 pllc openflow oftype
 %type	<i>	atmtype atmmultitype
 %type	<blk>	atmfield
 %type	<blk>	atmfieldvalue atmvalue atmlistvalue
 %type	<i>	mtp2type
 %type	<blk>	mtp3field
 %type	<blk>	mtp3fieldvalue mtp3value mtp3listvalue
+%type   <i> oftypeval
 
 
 %token  DST SRC HOST GATEWAY
 %token  NET NETMASK PORT PORTRANGE LESS GREATER PROTO PROTOCHAIN CBYTE
-%token  ARP RARP IP SCTP TCP UDP ICMP IGMP IGRP PIM VRRP CARP
+%token  ARP RARP IP SCTP TCP UDP ICMP IGMP IGRP PIM VRRP CARP OPENFLOW
 %token  ATALK AARP DECNET LAT SCA MOPRC MOPDL
 %token  TK_BROADCAST TK_MULTICAST
 %token  NUM INBOUND OUTBOUND
@@ -310,6 +377,7 @@
 %token	RADIO
 %token	FISU LSSU MSU HFISU HLSSU HMSU
 %token	SIO OPC DPC SLS HSIO HOPC HDPC HSLS
+%token  OFTYPE OFSTATSTYPE
 
 
 %type	<s> ID
@@ -482,6 +550,7 @@
 	| PIM			{ $$ = Q_PIM; }
 	| VRRP			{ $$ = Q_VRRP; }
 	| CARP 			{ $$ = Q_CARP; }
+    | OPENFLOW      { $$ = Q_OFP; }
 	| ATALK			{ $$ = Q_ATALK; }
 	| AARP			{ $$ = Q_AARP; }
 	| DECNET		{ $$ = Q_DECNET; }
@@ -528,6 +597,7 @@
 	| pfvar			{ $$ = $1; }
 	| pqual p80211		{ $$ = $2; }
 	| pllc			{ $$ = $1; }
+    | pqual openflow    { $$ = $2; }
 	;
 
 pfvar:	  PF_IFNAME ID		{ $$ = gen_pf_ifname($2); }
@@ -750,4 +820,18 @@
 mtp3listvalue: mtp3fieldvalue
 	| mtp3listvalue or mtp3fieldvalue { gen_or($1.b, $3.b); $$ = $3; }
 	;
+
+/* openflow qualifiers */
+openflow:   OFTYPE oftype  { $$ = $2; }
+    | OFTYPE oftype or oftype { gen_or($2, $4); $$ = $4; }
+    ;
+
+oftype: oftypeval { $$ = gen_openflow($1); }
+    ;
+
+oftypeval: ID  { $$ = str2tok($1, openflow_types);
+                if ($$ == -1)
+                    bpf_error("unknown openflow type name");
+            }
+    ;
 %%
